// Generated by CoffeeScript 1.7.1
(function() {
  var CSS, xhr;

  CSS = "../../../components/octicons/octicons/octicons.css";

  xhr = new XMLHttpRequest;

  xhr.addEventListener("load", function() {
    var className, classNameBefore, css, sizeTester, sizeTesterContainer, sizeTesterWrapper, style, _i, _j, _len, _len1, _ref, _ref1;
    css = this.responseText;
    sizeTesterContainer = document.createElement("div");
    sizeTesterContainer.className = "octicon";
    sizeTesterContainer.style.visibility = "hidden";
    _ref = css.match(/(\.octicon-.*:before,\s*)*\.octicon-.*:before\s*{\s*.*\s*}/mg);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      style = _ref[_i];
      _ref1 = style.match(/\.octicon-.*:before/g);
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        classNameBefore = _ref1[_j];
        console.log(classNameBefore);
        sizeTester = document.createElement("span");
        className = classNameBefore.match(/^\.(octicon-.*):before/)[1];
        sizeTester.className = className;
        sizeTesterWrapper = document.createElement("div");
        sizeTesterWrapper.appendChild(sizeTester);
        sizeTesterContainer.appendChild(sizeTesterWrapper);
      }
    }
    document.body.appendChild(sizeTesterContainer);
    WebFont.load({
      custom: {
        families: ["octicons"],
        urls: [CSS],
        testStrings: {
          octicons: "\uf092"
        }
      },
      active: function() {
        var code, s, _k, _len2, _ref2;
        _ref2 = [
          {
            fontSize: "14px"
          }, {
            prefix: "mega",
            fontSize: "20px"
          }
        ];
        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
          s = _ref2[_k];
          sizeTesterContainer.style.fontSize = s.fontSize;
          code = document.getElementsByTagName("code")[0];
          code.innerText += ((function() {
            var _l, _len3, _ref3, _results;
            _ref3 = sizeTesterContainer.children;
            _results = [];
            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
              sizeTesterWrapper = _ref3[_l];
              sizeTester = sizeTesterWrapper.children[0];
              _results.push("" + (s.prefix ? "." + s.prefix + " " : "") + "." + sizeTester.className + " { width: " + sizeTester.offsetWidth + "px; }");
            }
            return _results;
          })()).join("\n");
          code.innerText += "\n";
        }
        document.body.removeChild(sizeTesterContainer);
      }
    });
  });

  xhr.open("GET", CSS, true);

  xhr.send();

}).call(this);
