// Generated by CoffeeScript 1.6.3
(function() {
  var xhr;

  xhr = new XMLHttpRequest;

  xhr.addEventListener("load", function() {
    var className, css, sizeTester, sizeTesterContainer, style, _i, _len, _ref;
    css = this.responseText;
    sizeTesterContainer = document.createElement("div");
    sizeTesterContainer.className = "octicon";
    sizeTesterContainer.style.visibility = "hidden";
    _ref = css.match(/^\.octicon-.*{\s+.*\s+}$/mg);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      style = _ref[_i];
      sizeTester = document.createElement("span");
      className = style.match(/^\.(octicon-.*):before/)[1];
      sizeTester.className = className;
      sizeTesterContainer.appendChild(sizeTester);
    }
    document.body.appendChild(sizeTesterContainer);
    WebFont.load({
      custom: {
        families: ["octicons"],
        urls: ["../octicons.css"],
        testStrings: {
          octicons: "\uf092"
        }
      },
      active: function() {
        var code, i, s, _j, _len1, _ref1;
        _ref1 = [
          {
            fontSize: "14px"
          }, {
            prefix: "mega",
            fontSize: "20px"
          }
        ];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          s = _ref1[_j];
          sizeTesterContainer.style.fontSize = s.fontSize;
          code = document.getElementsByTagName("code")[0];
          code.innerText += ((function() {
            var _k, _len2, _ref2, _results;
            _ref2 = sizeTesterContainer.children;
            _results = [];
            for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
              i = _ref2[_k];
              _results.push("" + (s.prefix ? "." + s.prefix + " " : "") + "." + i.className + " {\n  width: " + i.offsetWidth + "px;\n}");
            }
            return _results;
          })()).join("\n\n");
        }
        document.body.removeChild(sizeTesterContainer);
      }
    });
  });

  xhr.open("GET", "/assets/css/octicons.css", true);

  xhr.send();

}).call(this);
